@using System.Linq.Expressions
@using AzureAppConfigurationEmulator.Common.Constants

<AzureInputSelect AdditionalAttributes="@AdditionalAttributes" TValue="@string" Value="@Value" ValueChanged="@HandleValueChanged" ValueExpression="@ValueExpression">
    <option checked="@(Value is null)" value="">(No content type)</option>
    <option checked="@(Value is MediaType.SecretReference)" value="@MediaType.SecretReference">Key Vault Reference (@MediaType.SecretReference)</option>
    <option checked="@(Value is MediaType.Json)" value="@MediaType.Json">JSON (@MediaType.Json)</option>
</AzureInputSelect>

@code {
    [Parameter(CaptureUnmatchedValues = true)] public IDictionary<string, object>? AdditionalAttributes { get; set; }

    [Parameter] public string? Value { get; set; }

    [Parameter] public EventCallback<string?> ValueChanged { get; set; }

    [Parameter] public Expression<Func<string?>>? ValueExpression { get; set; }

    private async Task HandleValueChanged(string? value)
    {
        await ValueChanged.InvokeAsync(!string.IsNullOrEmpty(value) ? value : null);
    }

}